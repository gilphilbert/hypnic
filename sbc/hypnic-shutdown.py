#!/usr/bin/python

# -------------------------------------------------#
#               DO NOT EDIT THIS FILE              #
# -------------------------------------------------#
# If you wish to modify the pins used, please edit #
#    /etc/hypnic.conf                              #
#--------------------------------------------------#

from ConfigParser import SafeConfigParser
import sys
import time
import RPi.GPIO as GPIO
#import logging

#logging.basicConfig(filename='/var/log/hypnic.log', filemode='w', format='%(name)s - %(levelname)s - %(message)s')
#logging.info('Shutdown script triggered')

class GlobalSection(object):
    def __init__(self, fp):
        self.fp = fp
        self.globalSec = '[pins]\n'

    def readline(self):
        if self.globalSec:
            try:
                return self.globalSec
            finally:
                self.globalSec = None
        else:
            return self.fp.readline()

parser = SafeConfigParser()
parser.readfp(GlobalSection(open('/etc/hypnic.conf')))

SAFE_PIN = parser.getint("pins", "safe_pin")

if (len(sys.argv) > 1):
    arg = str(sys.argv[1])
    if (arg == "halt" or arg == "poweroff"):
        #logging.info('Request to halt or shutdown')
        GPIO.setmode(GPIO.BCM)
        GPIO.setup(SAFE_PIN, GPIO.OUT)
        #logging.warning('Setting safe pin high')
        GPIO.output(SAFE_PIN, GPIO.HIGH)
        time.sleep(10)
    #else:
    #    logging.error('Invalid argument, quitting')

#else:
#    logging.error('No argument, quitting')
